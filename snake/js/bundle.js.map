{"version":3,"sources":["webpack/bootstrap 4662a440d8047edbbb87","./js/main.js","./js/view.js","./js/board.js","./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4662a440d8047edbbb87\n **/","var View = require(\"./view.js\");\nvar Board = require(\"./board.js\");\n\n$(function () {\n  var rootEl = $('.snake');\n  var board = new Board();\n  new View(board,rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./board');\n\nvar View = function (board, $el) {\n  this.$el = $el;\n  this.board = board;\n  this.createGrid();\n};\n\nView.prototype.createGrid = function () {\n  var $box = $('<ul>');\n  this.$el.append($box);\n\n  for (var i = 0; i < 400; i++) {\n    var $square = $('<li>');\n    $box.append($square);\n  }\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/view.js\n ** module id = 1\n ** module chunks = 0\n **/","var Snake = require(\"./snake\");\n\nvar Board = function() {\n    this.snake = new Snake('E', [[1,0], [0,0]]);\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 2\n ** module chunks = 0\n **/","\nvar Snake = function(direction, segments) {\n  this.direction = direction;\n  this.segments = segments;\n};\n\nSnake.prototype.move = function() {\n  var moveDirections = {\n    N: [0,1],\n    S: [0,-1],\n    E: [1,0],\n    W: [-1,0]\n  };\n\n  var newSegment = [this.segments[0] + moveDirections[this.direction][0],\n    this.segment[1] + moveDirections[this.direction][1]];\n\n  this.segments.shift(newSegment);\n  this.segments.pop();\n\n};\n\nSnake.prototype.turn = function(newDirection) {\n  this.direction = newDirection;\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}